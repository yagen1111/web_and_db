services:
  # API Service (Node.js Backend + Frontend)
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    ports:
      - "3000:3000"
      - "8080:3000"
    user: "0:0" # run as root to ensure write permissions on bind-mounted logs directory
    environment:
      - NODE_ENV=development
      - TIDB_HOST=${TIDB_HOST}
      - TIDB_PORT=${TIDB_PORT}
      - TIDB_USER=${TIDB_USER}
      - TIDB_PASSWORD=${TIDB_PASSWORD}
      - TIDB_DATABASE=${TIDB_DATABASE}
      - TIDB_REGION=${TIDB_REGION}
      - JWT_SECRET=${JWT_SECRET}
      - SECRET_KEY=${SECRET_KEY}
      - KAFKA_BROKERS=${KAFKA_BROKERS}
      - KAFKA_SSL=${KAFKA_SSL}
      - KAFKA_SASL_MECHANISM=${KAFKA_SASL_MECHANISM}
      - KAFKA_SASL_USERNAME=${KAFKA_SASL_USERNAME}
      - KAFKA_SASL_PASSWORD=${KAFKA_SASL_PASSWORD}
      - CDC_TOPICS=${CDC_TOPICS}
      - ENABLE_APP_TOPICS=${ENABLE_APP_TOPICS}
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - app-network

  # Database Initialization Service
  db-init:
    build:
      context: .
      dockerfile: Dockerfile.db-init
    environment:
      - TIDB_HOST=${TIDB_HOST}
      - TIDB_PORT=${TIDB_PORT}
      - TIDB_USER=${TIDB_USER}
      - TIDB_PASSWORD=${TIDB_PASSWORD}
      - TIDB_DATABASE=${TIDB_DATABASE}
      - TIDB_REGION=${TIDB_REGION}
      - DEFAULT_USERNAME=admin
      - DEFAULT_PASSWORD=admin123
    networks:
      - app-network
    restart: "no"

  # CDC Consumer Service
  cdc-consumer:
    build:
      context: .
      dockerfile: Dockerfile.cdc-consumer
    environment:
      - KAFKA_BROKERS=${KAFKA_BROKERS}
      - KAFKA_SSL=${KAFKA_SSL}
      - KAFKA_SASL_MECHANISM=${KAFKA_SASL_MECHANISM}
      - KAFKA_SASL_USERNAME=${KAFKA_SASL_USERNAME}
      - KAFKA_SASL_PASSWORD=${KAFKA_SASL_PASSWORD}
      - CDC_TOPICS=${CDC_TOPICS}
      - ENABLE_HEALTH_CHECK=true
      - HEALTH_CHECK_PORT=3001
    networks:
      - app-network
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs

networks:
  app-network:
    driver: bridge